buildscript {
    ext {
        springBootVersion = '3.0.6'//'2.7.8'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin")//:${springBootVersion}
    }
}
plugins {
    id 'java-library'
    id 'java'
    id 'war'
    //id 'com.bmuschko.docker-remote-api' version '3.2.3'
    //id 'com.palantir.docker' version '0.33.0'
    //id "com.palantir.docker-run" version "0.33.0"
    id("org.springframework.boot") version "3.0.6"
    id("io.spring.dependency-management") version "1.1.0"
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.optum.paymentSystem'
version = '1.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    flatDir(dir: 'libs')//, name: 'Local libs'
    jcenter()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven { url "https://repo.spring.io/libs-milestone" }
    maven { url "https://mvnrepository.com/" }
    maven { url "https://mvnrepository.com/artifact/" }
    maven { url "https://repo.spring.io/milestone" }

}
def lib = [
       mslinks: fileTree(dir: 'libs', include: '*.jar'),
       //oracle : fileTree(dir: 'libs', include: '*.jar')
]
//configurations {
  //  compile.exclude module: "spring-boot-starter-tomcat"
//}
dependencyManagement {
    imports {
        mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    }
}
dependencies {
    //docker
  //  runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.0'
    //implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    compileOnly 'org.projectlombok:lombok'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'

    implementation 'javax.transaction:javax.transaction-api:1.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '8.0.0.Final'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    //implementation group: 'joda-time', name: 'joda-time', version: '2.12.5'
    // implementation group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.4'
    // implementation 'org.javassist:javassist:3.23.1-GA'
    // implementation 'javax.activation:activation:1.1.1'
    // compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

    //implementation 'org.springframework.boot:spring-boot-starter-parent:${springBootVersion}' //2.7.11

    //implementation platform('org.springframework.boot:spring-boot-dependencies:${springBootVersion}')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly('org.springframework.boot:spring-boot-starter-tomcat')
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc11', version: '21.3.0.0'

    //implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.boot:spring-boot-devtools'

    //implementation 'org.springframework.data:spring-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //implementation group: 'com.github.zhanhb', name: 'character-encoding-filter', version: '2.1.6'
    implementation files('libs/mslinks-1.0.6.2.jar')//, 'libs/ojdbc11.jar')

    //annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    //testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    //testImplementation('org.junit.jupiter:junit-jupiter-engine:5.8.2')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        //exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation files('libs/ojdbc11.jar')
    testImplementation 'junit:junit:4.13.1'
    testImplementation('org.easytesting:fest-assert:1.4')
    //testImplementation 'ma.glasnost.orika:orika-core:1.5.4'
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force 'com.google:guava:31.1-jre',
                'org.projectlombok:lombok:1.16.10',
                'com.fasterxml.jackson.core:jackson-databind:2.13.3',
                'com.fasterxml.jackson.core:jackson-core:2.13.3',
                'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
        //  *replace existing forced modules with new ones:
        forcedModules = ['com.google:guava:31.1-jre',
                         'org.projectlombok:lombok:1.16.10',
                         'com.fasterxml.jackson.core:jackson-databind:2.13.3',
                         'com.fasterxml.jackson.core:jackson-core:2.13.3',
                         'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
        ]
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.apache.tomcat.embed') {
                details.useVersion '8.0.3'
            }
        }
    }
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group + ":" + details.requested.name == 'com.google:guava') {
            details.useVersion "31.1-jre"
            details.useTarget "com.google:guava:31.1-jre"
        }
    }
}
jar {
    manifest {
        attributes 'Main-Class': 'com.optum.payment.system.PaymentSystemApplication'
    }

    from("src/main/webapp") {
        into("BOOT-INF/classes/app") // It is actually located under the "BOOT-INF/classes"
    }

    from 'src/main/webapp', sourceSets.main.output
    //finalizedBy bootRepackage

//	zip64 = true
//	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

tasks.named('test') {
    useJUnitPlatform()
}
springBoot {
    //mainClass = "com.optum.payment.system.PaymentSystemApplication"
    buildInfo()
}
// takes templatized Dockerfile, places into buildDir
task prepareDockerfileTemplate(type: Copy) {
    from "src/main/resources/docker"
    include "Dockerfile"
    filter { it.replaceAll('<%=name%>', project.name) }
    filter { it.replaceAll('<%=version%>', project.version) }
    into "$buildDir"
}
//def dockerOwner = 'oksana'
//dockerPrepare.dependsOn bootJar
//bootJar.dependsOn prepareDockerfileTemplate
//bootJarMainClassName.dependsOn prepareDockerfileTemplate
/*

docker {
    name "${dockerOwner}/${project.name}:${project.version}"
    files "$buildDir/libs/${project.name}-${project.version}.jar"
    dockerfile file("$buildDir/Dockerfile")
}

dockerRun {
    name "${project.name}"
    image "${dockerOwner}/${project.name}:${project.version}"
    ports '8080:8080','8081:8081'
    clean true
    daemonize false
}*/
